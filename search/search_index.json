{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the OpenShift Tiger Team","text":""},{"location":"busybox/","title":"Busybox Examples for OpenShift","text":""},{"location":"busybox/#busybox-as-a-webserver","title":"Busybox as a Webserver","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: busybox-http-deployment\n  labels:\n    app: busybox-http\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: busybox-http\n  template:\n    metadata:\n      labels:\n        app: busybox-http\n    spec:\n      containers:\n      - name: busybox-http\n        image: busybox\n        command:\n          - sh\n          - -c\n          - |\n            mkdir -p /tmp/www\n            echo \"&lt;!DOCTYPE html&gt;&lt;html lang=\\\"en\\\"&gt;&lt;head&gt;&lt;meta charset=\\\"UTF-8\\\"&gt;&lt;title&gt;Busybox HTTP Server&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Welcome to the Busybox HTTP Server&lt;/h1&gt;&lt;p&gt;This is a simple HTML page served by Busybox.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\" &gt; /tmp/www/index.html\n            httpd -f -v -p 8080 -h /tmp/www\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: busybox-service\n  labels:\n    app: busybox-http\nspec:\n  selector:\n    app: busybox-http\n  ports:\n    - protocol: TCP\n      port: 8080\n      targetPort: 8080\n---\nkind: Route\napiVersion: route.openshift.io/v1\nmetadata:\n  name: busybox-route\n  labels:\n    app: busybox-http\nspec:\n  to:\n    kind: Service\n    name: busybox-service\n    weight: 100\n  port:\n    targetPort: 8080\n  tls:\n    termination: edge\n    insecureEdgeTerminationPolicy: Redirect\n  wildcardPolicy: None\n</code></pre>"},{"location":"quarkus-demo/","title":"Quarkus Demo Examples","text":"<p>https://github.com/openshift-tigerteam/quarkus-demo-api</p> <p>To deploy using static manifests:</p> <pre><code>oc new-project quarkus-demo\noc apply -f https://raw.githubusercontent.com/openshift-tigerteam/quarkus-demo-api/main/deploy/manifests/deploy.yml\n</code></pre> <p>You can also deploy using s2i, in multiple ways. </p>"},{"location":"install/day-2/","title":"Day 2","text":""},{"location":"install/day-2/#day-2-tasks","title":"Day 2 Tasks","text":"<p> Customize the WebUI - Mark the UI as a sandbox </p> <pre><code>apiVersion: console.openshift.io/v1\nkind: ConsoleNotification\nmetadata:\n  name: sandbox-notification\nspec:\n  text: SANDBOX\n  location: BannerTop \n  color: '#fff'\n  backgroundColor: '##6e0101'\n</code></pre> <p>Install ODF</p> <p>Configure the Registry</p> <p>Red Hat OpenShift cert-manager - Replace Certificates</p> <p>Install OpenShift Virtualization   * OCPv post install - NMState Operator and SR-IOV Operators   * Migration Toolkit for Virtualization</p>"},{"location":"install/day-2/#other-tools","title":"Other Tools","text":"<p>Nexus Operator</p>"},{"location":"install/multipath/","title":"Multipath","text":"<pre><code>apiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n  name: 99-worker-multipathd-config\n  labels:\n    machineconfiguration.openshift.io/role: worker\nspec:\n  config:\n    ignition:\n      version: 3.2.0\n    systemd:\n      units:\n        - enabled: true\n          name: multipathd.service\n    storage:\n      files:\n        - filesystem: root\n          mode: 420\n          path: /etc/multipath.conf\n          contents:\n            inline: |\n              defaults {\n                user_friendly_names yes\n                find_multipaths yes\n              }\n              # include devices for exclusion\n              # see \n              blacklist {\n              }\n</code></pre>"},{"location":"install/assisted/assisted-installer/","title":"Using the assisted installer","text":""},{"location":"install/assisted/assisted-installer/#prerequisites","title":"Prerequisites","text":""},{"location":"install/assisted/assisted-installer/#hardware","title":"Hardware","text":"<p>6 Nodes - 3 Control Plane, 3 Workers MIN - 4 vCPU, 16 GB RAM, 100 GB install disk w/ 300 IOPS, 1 TB persistent storage disk</p> <p>For all nodes: </p> <ul> <li>Networking (IPAM)<ul> <li>DHCP (Recommended)</li> <li>Static: macaddress and IP address for each machine</li> </ul> </li> <li>Disks<ul> <li>Install disk located at /dev/sda</li> <li>For worker nodes, additional persistent storage disk for ODF</li> </ul> </li> </ul>"},{"location":"install/assisted/assisted-installer/#networking","title":"Networking","text":"<p>Machine subnet (/24) Two VIPs (API, Ingress)</p>"},{"location":"install/assisted/assisted-installer/#certificates-recommended","title":"Certificates (Recommended)","text":"<p>API certificate (api.clustername.basedomain.com) Ingress wildcard certificate (*.apps.clustername.basedomain.com) Ingress wildcard certificate (root CA certificate)</p> <p></p>"},{"location":"install/assisted/assisted-installer/#install","title":"Install","text":"<p>Go to https://console.redhat.com/openshift/assisted-installer. Click on Create Cluster</p> <p></p> <p>Move to Datacenter tab and click on Create Cluster</p> <p></p> <p>Imput the basic information about the cluster. </p> <p></p> <p>Don't select any operators. We will install those Day 2. </p> <p></p> <p>Click on the Add Hosts button to generate the ISO</p> <p></p> <p>Select Full Image and generate the iso, then save it</p> <p></p> <p>Boot the boxes with the generated ISO and they will show up in the host inventory.</p> <p></p> <p>Select the Installaion disks and format the other disks (node 3 hidden for image sizing)</p> <p></p> <p>Fill out networking information</p> <p></p> <p>Review and press Install Cluster</p> <p></p> <p>Wait...</p> <p></p> <p>Success!</p> <p></p>"},{"location":"install/assisted/assisted-installer/#postinstall-cleanup","title":"Postinstall Cleanup","text":"<pre><code>oc delete pods --field-selector status.phase=Failed -A\noc delete pods --field-selector status.phase=Succeeded -A\n</code></pre>"},{"location":"pages/tools/","title":"Tools","text":""},{"location":"pages/tools/#network-tools-in-a-pod","title":"Network Tools in a Pod","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: network-multitool\n  namespace: default\nspec:\n  containers:\n    - name: network-multitool\n      image: wbitt/network-multitool\n</code></pre>"}]}